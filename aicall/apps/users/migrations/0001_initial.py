# Generated by Django 3.1.7 on 2021-03-19 08:53

import apps.utils.func
import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import unixtimestampfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('info', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.BigIntegerField(db_index=True)),
                ('code', models.IntegerField(db_index=True, verbose_name='Code')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Is checked')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2021, 3, 19, 0, 20), verbose_name='Expires at')),
            ],
            options={
                'verbose_name': 'Phone',
                'verbose_name_plural': 'Phones',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'A user with that E-mail already exists.'}, help_text='Required', max_length=254, null=True, unique=True, verbose_name='E-mail')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Phone')),
                ('avatar', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=apps.utils.func.user_avatar, verbose_name='ImagePNG')),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('birthday_date', unixtimestampfield.fields.UnixTimeStampField(verbose_name='Date of birthday in timestamp')),
                ('sex', models.IntegerField(choices=[(2, 'Мужской'), (1, 'Женский'), (0, 'Не выбран')], default=0, null=True, verbose_name='Sex')),
                ('family', models.IntegerField(choices=[(1, 'В браке'), (0, 'Свободен')], default=0, null=True, verbose_name='Family')),
                ('notifications', models.BooleanField(default=False, verbose_name='Notifications')),
                ('action_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_action_area', to='info.actionarea')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_country', to='info.country')),
                ('education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_education', to='info.education')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('languages', models.ManyToManyField(blank=True, related_name='user_language', to='info.Language')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
